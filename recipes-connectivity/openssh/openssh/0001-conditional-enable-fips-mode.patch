From fac114e44c00382af087fec04cd4c2fbd144d759 Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Sat, 21 Dec 2019 13:03:23 +0800
Subject: [PATCH] conditional enable fips mode

Insert ssh_enable_fips_mode to ssh_malloc_init where each main app will invoke,
enable fips mode according to the existence of "/etc/system-fips"

Upstream-Status: Inappropriate [oe specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>
---
 xmalloc.c | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/xmalloc.c b/xmalloc.c
index 9cd0127..75d5018 100644
--- a/xmalloc.c
+++ b/xmalloc.c
@@ -23,6 +23,10 @@
 #include <stdlib.h>
 #include <string.h>
 
+#include <openssl/err.h>
+#include <openssl/crypto.h>
+#include <unistd.h>
+
 #include "xmalloc.h"
 #include "log.h"
 
@@ -30,11 +34,15 @@
 char *malloc_options = "S";
 #endif /* __OpenBSD__ */
 
+void ssh_enable_fips_mode(void);
+
 void *
 xmalloc(size_t size)
 {
 	void *ptr;
 
+	ssh_enable_fips_mode();
+
 	if (size == 0)
 		fatal("xmalloc: zero size");
 	ptr = malloc(size);
@@ -110,3 +118,19 @@ xasprintf(char **ret, const char *fmt, ...)
 
 	return (i);
 }
+
+void
+ssh_enable_fips_mode(void)
+{
+    if (access("/etc/system-fips", F_OK) == 0) {
+        if (!FIPS_mode_set(1)) {
+            /* make sure the error stack is available for some hint as
+             * to why this operation failed
+             */
+            ERR_load_crypto_strings();
+            ERR_print_errors_fp(stdout);
+            fatal("FIPS_mode_set(): failed to enter FIPS mode!\n");
+            exit(1);
+        }
+    }
+}
-- 
2.7.4

