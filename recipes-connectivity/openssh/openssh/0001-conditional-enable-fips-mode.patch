From 571b24129e3c3a84e38a59a32aa61fa40e04e1e2 Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Sat, 21 Dec 2019 13:03:23 +0800
Subject: [PATCH] conditional enable fips mode

Insert ssh_enable_fips_mode to ssh_malloc_init where each main app will invoke,
enable fips mode according to the existence of "/etc/system-fips"

Upstream-Status: Inappropriate [oe specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>

The ssh_malloc_init function is removed in openssh 8.1p1, we need to
insert ssh_enable_fips_mode function to main function for all
applications.

Signed-off-by: Yi Zhao <yi.zhao@windriver.com>
---
 sftp-server-main.c  |  1 +
 sftp-server.c       |  1 +
 sftp.c              |  1 +
 ssh-add.c           |  1 +
 ssh-agent.c         |  1 +
 ssh-keygen.c        |  1 +
 ssh-keyscan.c       |  1 +
 ssh-keysign.c       |  1 +
 ssh-pkcs11-helper.c |  1 +
 ssh.c               |  1 +
 sshd.c              |  1 +
 xmalloc.c           | 20 ++++++++++++++++++++
 xmalloc.h           |  1 +
 13 files changed, 32 insertions(+)

diff --git a/sftp-server-main.c b/sftp-server-main.c
index 06566d3..a10566d 100644
--- a/sftp-server-main.c
+++ b/sftp-server-main.c
@@ -39,6 +39,7 @@ main(int argc, char **argv)
 {
 	struct passwd *user_pw;
 
+	ssh_enable_fips_mode();
 	/* Ensure that fds 0, 1 and 2 are open or directed to /dev/null */
 	sanitise_stdfd();
 
diff --git a/sftp-server.c b/sftp-server.c
index 55386fa..8c1634e 100644
--- a/sftp-server.c
+++ b/sftp-server.c
@@ -1577,6 +1577,7 @@ sftp_server_main(int argc, char **argv, struct passwd *user_pw)
 	extern char *optarg;
 	extern char *__progname;
 
+	ssh_enable_fips_mode();
 	__progname = ssh_get_progname(argv[0]);
 	log_init(__progname, log_level, log_facility, log_stderr);
 
diff --git a/sftp.c b/sftp.c
index c88c861..171bc56 100644
--- a/sftp.c
+++ b/sftp.c
@@ -2390,6 +2390,7 @@ main(int argc, char **argv)
 	size_t num_requests = DEFAULT_NUM_REQUESTS;
 	long long limit_kbps = 0;
 
+	ssh_enable_fips_mode();
 	/* Ensure that fds 0, 1 and 2 are open or directed to /dev/null */
 	sanitise_stdfd();
 	msetlocale();
diff --git a/ssh-add.c b/ssh-add.c
index 936dc21..b7ac2d2 100644
--- a/ssh-add.c
+++ b/ssh-add.c
@@ -671,6 +671,7 @@ main(int argc, char **argv)
 	SyslogFacility log_facility = SYSLOG_FACILITY_AUTH;
 	LogLevel log_level = SYSLOG_LEVEL_INFO;
 
+	ssh_enable_fips_mode();
 	/* Ensure that fds 0, 1 and 2 are open or directed to /dev/null */
 	sanitise_stdfd();
 
diff --git a/ssh-agent.c b/ssh-agent.c
index e1fd1f3..da49b57 100644
--- a/ssh-agent.c
+++ b/ssh-agent.c
@@ -1289,6 +1289,7 @@ main(int ac, char **av)
 	size_t npfd = 0;
 	u_int maxfds;
 
+	ssh_enable_fips_mode();
 	/* Ensure that fds 0, 1 and 2 are open or directed to /dev/null */
 	sanitise_stdfd();
 
diff --git a/ssh-keygen.c b/ssh-keygen.c
index cb8e569..67c7d62 100644
--- a/ssh-keygen.c
+++ b/ssh-keygen.c
@@ -3184,6 +3184,7 @@ main(int argc, char **argv)
 	extern int optind;
 	extern char *optarg;
 
+	ssh_enable_fips_mode();
 	/* Ensure that fds 0, 1 and 2 are open or directed to /dev/null */
 	sanitise_stdfd();
 
diff --git a/ssh-keyscan.c b/ssh-keyscan.c
index ca19042..c667f2c 100644
--- a/ssh-keyscan.c
+++ b/ssh-keyscan.c
@@ -667,6 +667,7 @@ main(int argc, char **argv)
 	extern int optind;
 	extern char *optarg;
 
+	ssh_enable_fips_mode();
 	__progname = ssh_get_progname(argv[0]);
 	seed_rng();
 	TAILQ_INIT(&tq);
diff --git a/ssh-keysign.c b/ssh-keysign.c
index 7991e0f..26a3bab 100644
--- a/ssh-keysign.c
+++ b/ssh-keysign.c
@@ -173,6 +173,7 @@ main(int argc, char **argv)
 	char *host, *fp;
 	size_t slen, dlen;
 
+	ssh_enable_fips_mode();
 	if (pledge("stdio rpath getpw dns id", NULL) != 0)
 		fatal("%s: pledge: %s", __progname, strerror(errno));
 
diff --git a/ssh-pkcs11-helper.c b/ssh-pkcs11-helper.c
index d73e835..e508684 100644
--- a/ssh-pkcs11-helper.c
+++ b/ssh-pkcs11-helper.c
@@ -332,6 +332,7 @@ main(int argc, char **argv)
 	extern char *__progname;
 	struct pollfd pfd[2];
 
+	ssh_enable_fips_mode();
 	__progname = ssh_get_progname(argv[0]);
 	seed_rng();
 	TAILQ_INIT(&pkcs11_keylist);
diff --git a/ssh.c b/ssh.c
index aabd5d3..81393f1 100644
--- a/ssh.c
+++ b/ssh.c
@@ -660,6 +660,7 @@ main(int ac, char **av)
 	size_t n, len;
 	u_int j;
 
+	ssh_enable_fips_mode();
 	/* Ensure that fds 0, 1 and 2 are open or directed to /dev/null */
 	sanitise_stdfd();
 
diff --git a/sshd.c b/sshd.c
index 1f1fcc2..0f68419 100644
--- a/sshd.c
+++ b/sshd.c
@@ -1553,6 +1553,7 @@ main(int ac, char **av)
 	Authctxt *authctxt;
 	struct connection_info *connection_info = NULL;
 
+	ssh_enable_fips_mode();
 #ifdef HAVE_SECUREWARE
 	(void)set_auth_parameters(ac, av);
 #endif
diff --git a/xmalloc.c b/xmalloc.c
index b48d33b..456a063 100644
--- a/xmalloc.c
+++ b/xmalloc.c
@@ -23,6 +23,10 @@
 #include <stdlib.h>
 #include <string.h>
 
+#include <openssl/err.h>
+#include <openssl/crypto.h>
+#include <unistd.h>
+
 #include "xmalloc.h"
 #include "log.h"
 
@@ -117,3 +121,19 @@ xasprintf(char **ret, const char *fmt, ...)
 	va_end(ap);
 	return i;
 }
+
+void
+ssh_enable_fips_mode(void)
+{
+    if (access("/etc/system-fips", F_OK) == 0) {
+        if (!FIPS_mode_set(1)) {
+            /* make sure the error stack is available for some hint as
+             * to why this operation failed
+             */
+            ERR_load_crypto_strings();
+            ERR_print_errors_fp(stdout);
+            fatal("FIPS_mode_set(): failed to enter FIPS mode!\n");
+            exit(1);
+        }
+    }
+}
diff --git a/xmalloc.h b/xmalloc.h
index abaf7ad..b3b1c8c 100644
--- a/xmalloc.h
+++ b/xmalloc.h
@@ -26,3 +26,4 @@ int	 xasprintf(char **, const char *, ...)
                 __attribute__((__nonnull__ (2)));
 int	 xvasprintf(char **, const char *, va_list)
 		__attribute__((__nonnull__ (2)));
+void	ssh_enable_fips_mode(void);
-- 
2.17.1

